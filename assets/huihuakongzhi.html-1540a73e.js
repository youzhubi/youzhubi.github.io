import{_ as o,p as e,q as c,s as n,R as s,t as p,Z as a,n as i}from"./framework-9675d465.js";const l={},u=a('<blockquote><ul><li>HTTP 是一种无状态的协议，它没有办法区分多次的请求是否来自于同一个客户端， 无法区分用户，而产品中又大量存在的这样的需求，所以我们需要通过会话控制来解决该问题。</li><li>常见的会话控制技术有三种：</li><li>cookie</li><li>session</li><li>token</li></ul></blockquote><h2 id="_1-cookie" tabindex="-1"><a class="header-anchor" href="#_1-cookie" aria-hidden="true">#</a> 1.cookie</h2><h3 id="_1-1cookie是什么" tabindex="-1"><a class="header-anchor" href="#_1-1cookie是什么" aria-hidden="true">#</a> 1.1cookie是什么？</h3>',3),r={href:"http://www.yuanjin.tech/article/98#article-md-title-2",target:"_blank",rel:"noopener noreferrer"},k=a(`<ul><li>cookie 是保存在浏览器端的一小块数据</li><li>cookie 是按照域名划分保存的</li><li>cookie的本质就是一个请求头 <ul><li>服务器以响应头的形式将cookie发送给客户端,客户端收到以后会将其存储，并在下次向服务器发送请求时将其传回， 这样服务器就可以根据cookie来识别出客户端了。</li></ul></li></ul><table><thead><tr><th>域名</th><th>cookie</th></tr></thead><tbody><tr><td>https://www.bilibili.com</td><td>a=10,b=10</td></tr><tr><td>https://www.baidu.com</td><td>xid=1020abce121; hm=112411213</td></tr></tbody></table><p>###1.2 express中cookie 的代码操作</p><p>设置cookie</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/set-cookie&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 会在浏览器关闭的时候销毁</span>
    res<span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置有效期  其他参数直接面向搜索引擎</span>
        <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;home&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器运行在3000端口~~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除cookie</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/remove-cookie&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">clearCookie</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;删除成功&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过cookie-parser解析cookie</p><ol><li>npm i cookie-parser （yarn add cookie-parser）</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 2.引入</span>
<span class="token keyword">const</span> cookieParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;cookie-parser&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 3.设置为中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cookieParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 读取cookie</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/get-cookie&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取 cookie</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">欢迎</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器运行在3000端口~~~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>cookie的不足</strong></p><ul><li><code>cookie</code>是由服务器创建，浏览器缓存，每次浏览器访问服务器时都需要将<code>cookie</code>发回，这就导致我们不能在<code>cookie</code>中存放较多的数据，并且<code>cookie</code>是直接存储在客户端，容易被篡改盗用。</li><li><strong>注意：</strong> 我们在使用<code>cookie</code>一定不会在<code>cookie</code>中存储敏感数据。</li><li>所以为了Cookie的不足，我们希望可以这样： 将用户的数据统一存储在服务器中， 每一个用户的数据都有一个对应的id，我们只需通过cookie将id发送给浏览器，浏览器只需每次访问时将id发回，即可读取到服务器中存储的数据。 这个技术我们称之为session（会话）。</li></ul><h2 id="_2-session" tabindex="-1"><a class="header-anchor" href="#_2-session" aria-hidden="true">#</a> 2.session</h2><h3 id="_2-1session是什么" tabindex="-1"><a class="header-anchor" href="#_2-1session是什么" aria-hidden="true">#</a> 2.1session是什么？</h3><blockquote><ul><li>session是服务器中的一个对象，这个对象用来存储用户的数据。</li><li>每一个session对象都有一个唯一的id，id会通过cookie的形式发送给客户端。</li><li>客户端每次访问时只需将存储有id的cookie发回即可获取它在服务器中存储的数据。</li></ul><p>这样就实现了会话控制，可以识别用户的身份，快速获取当前用户的相关信息</p></blockquote><h3 id="_2-2session运行流程" tabindex="-1"><a class="header-anchor" href="#_2-2session运行流程" aria-hidden="true">#</a> 2.2session运行流程</h3><p>以登录为例：</p><ul><li>填写账号和密码校验身份，校验通过后创建 session 信息 ，然后将 session_id 的值通过响应头返回给浏览器。</li><li>有了 cookie，下次发送请求时会自动携带 cookie，服务器通过 cookie 中的 session_id 的值确定用户的身份。</li></ul><h3 id="_2-3session的代码操作" tabindex="-1"><a class="header-anchor" href="#_2-3session的代码操作" aria-hidden="true">#</a> 2.3session的代码操作</h3><p>在express中可以通过 express-session 组件来实现session功能。express-session中间件来管理会话对象，该中间件将会话 ID 存储在 cookie 中。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 1.安装npm i express-session connect-mong</span>
<span class="token comment">// 2.引入</span>
<span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express-session&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> MongoStore <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;connect-mongo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 3.设置session中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
    <span class="token function">session</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;sid&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 设置cookie的name，默认值是：connect.sid</span>
        <span class="token literal-property property">secret</span><span class="token operator">:</span> <span class="token string">&quot;sunwukong&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 参与加密的字符串（又称签名）</span>
        <span class="token literal-property property">saveUninitialized</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否为每个请求都设置一个cookie用来存储session的id</span>
        <span class="token literal-property property">resave</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在每次请求时重新保存session</span>
        <span class="token literal-property property">store</span><span class="token operator">:</span> MongoStore<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">mongoUrl</span><span class="token operator">:</span> <span class="token string">&quot;mongodb://127.0.0.1:27017/bilibili&quot;</span><span class="token punctuation">,</span> <span class="token comment">//数据库的连接配置</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// 响应cookie配置</span>
        <span class="token literal-property property">cookie</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">httpOnly</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启后前端无法通过 JS 操作 (document.cookie)</span>
            <span class="token literal-property property">maxAge</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token comment">// 控制 sessionID 的过期时间</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;home&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 创建session</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// username=admin&amp;password=admin</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>username <span class="token operator">===</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">&amp;&amp;</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>password <span class="token operator">===</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置 session 信息</span>
        req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span>
        req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>uid <span class="token operator">=</span> <span class="token string">&quot;254fdskli&quot;</span>
        <span class="token comment">// 成功响应</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;登录成功&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;登录失败~~~&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// session 的读取</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/cart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 检测 session 是否存在用户数据</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 此时中间件已经将当前用户session信息从数据库当中取出，存到session属性当中了</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">购物车页面，欢迎您</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>session<span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;您还没有登录&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// session 的销毁</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/logout&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    req<span class="token punctuation">.</span>session<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;退出成功~~~&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;服务器运行在3000端口&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-session和cookie的区别" tabindex="-1"><a class="header-anchor" href="#_3-session和cookie的区别" aria-hidden="true">#</a> 3.session和cookie的区别</h2><ol><li>存在的位置 <ul><li>cookie：浏览器端。</li><li>session：服务端。</li></ul></li><li>安全性</li></ol><ul><li>cookie 是以明文的方式存放在客户端的，安全性相对较低。</li><li>session 存放于服务器中，所以安全性相对较好。</li></ul><ol start="3"><li>网络传输量</li></ol><ul><li>cookie 设置内容过多会增大报文体积， 会影响传输效率。</li><li>session 数据存储在服务器，只是通过 cookie 传递 id，所以不影响传输效率。</li></ul><ol start="4"><li>存储限制</li></ol><ul><li>浏览器限制单个 cookie 保存的数据不能超过 4K ，且单个域名下的存储数量也有限制。</li><li>session 数据存储在服务器中，所以没有这些限制。</li></ul><h2 id="_4-token" tabindex="-1"><a class="header-anchor" href="#_4-token" aria-hidden="true">#</a> 4.token</h2><blockquote><ul><li>token 是服务端生成并返回给 HTTP 客户端的一串加密字符串， token 中保存着 用户信息。</li><li>实现会话控制，可以识别用户的身份，主要用于移动端 APP。</li></ul></blockquote><h3 id="_4-1token工作流程" tabindex="-1"><a class="header-anchor" href="#_4-1token工作流程" aria-hidden="true">#</a> 4.1token工作流程</h3><ul><li>填写账号和密码校验身份，校验通过后响应 token，token 一般是在响应体中返回给客户端的。</li><li>后续发送请求时，需要手动将 token 添加在请求报文中，一般是放在请求头中。</li></ul><h3 id="_4-2token特点" tabindex="-1"><a class="header-anchor" href="#_4-2token特点" aria-hidden="true">#</a> 4.2token特点</h3><ul><li>服务端压力更小 <ul><li>数据存储在客户端</li></ul></li><li>相对更安全 <ul><li>数据加密</li><li>可以避免 CSRF（跨站请求伪造）</li></ul></li><li>扩展性更强 <ul><li>服务间可以共享</li><li>增加服务节点更简单</li></ul></li></ul><h2 id="_5-jwt" tabindex="-1"><a class="header-anchor" href="#_5-jwt" aria-hidden="true">#</a> 5.JWT</h2>`,35),d={href:"http://www.yuanjin.tech/article/100",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>使用 jsonwebtoken 包 来操作 token</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 导入jwt</span>
<span class="token keyword">const</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;jsonwebtoken&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 创建(生成)token</span>
<span class="token comment">// let token = jwt.sign(用户数据,加密字符串,配置对象)</span>
<span class="token keyword">const</span> token <span class="token operator">=</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&quot;sunwukong&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;helloworld&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token comment">// 过期时间 单位秒</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token comment">// 校验 token</span>
jwt<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> <span class="token string">&quot;helloworld&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;校验失败&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;校验成功&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function m(b,g){const t=i("ExternalLinkIcon");return e(),c("div",null,[u,n("blockquote",null,[n("p",null,[s("cookie相当于卡包，卡包里有会员卡，每一张会员卡对应每一家不同的商店，通过此卡来判断你的身份。放在浏览器里讲就是将每个网站信息（卡片）存储到了cookie里（卡包里）。 "),n("a",r,[s("cookie详细解释"),p(t)])])]),k,n("blockquote",null,[n("p",null,[s("JWT（JSON Web Token ）是目前最流行的跨域认证解决方案，可用于基于 token 的身份验证。 JWT 使 token 的生成与校验更规范。 "),n("a",d,[s("JWT详细解释"),p(t)])])]),v])}const h=o(l,[["render",m],["__file","huihuakongzhi.html.vue"]]);export{h as default};
