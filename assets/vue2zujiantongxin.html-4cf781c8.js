import{_ as n,p as a,q as s,Z as t}from"./framework-9675d465.js";const p={},e=t(`<h2 id="组件通信的六种方式" tabindex="-1"><a class="header-anchor" href="#组件通信的六种方式" aria-hidden="true">#</a> 组件通信的六种方式</h2><ul><li><p>第一种：props</p><p>适用于的场景：父子组件通信 注意事项：</p><ul><li>如果父组件给子组件传递数据（函数）：本质其实是子组件给父组件传递数据</li><li>如果父组件给子组件传递的数据（非函数）：本质就是父组件给子组件传递数据</li><li>书写方式：3种 <ul><li>[&#39;todos&#39;],{type:Array},{type:Array,default:[]</li></ul></li></ul><p>小提示：路由的props 书写形式：布尔值，对象、函数形式</p></li><li><p>第二种：自定义事件</p><p>适用于场景：子组件给父组件传递数据 on与emit</p></li><li><p>第三种：全局事件总线$bus</p><p>适用手场景：万能 Vue.prototype.$bus this;</p></li><li><p>第四种：pubsub-js,在Reacti框架中使用比较多。（发布与订阅）</p><p>适用手场景：万能</p></li><li><p>第五种：Vuex</p><p>适用手场景：万能</p></li><li><p>第六种：插槽</p><p>适用于场景：父子组件通信--（一般结构）</p><ul><li>默认插槽</li><li>具名插槽</li><li>作用域插槽</li></ul></li></ul><h2 id="_1-自定义事件深入" tabindex="-1"><a class="header-anchor" href="#_1-自定义事件深入" aria-hidden="true">#</a> 1.自定义事件深入</h2><ol><li><p>原生DOM：可以绑定系统事件（click、双击、鼠标等系列事件）</p></li><li><p>组件标签 ：可以绑定系统事件。（不起作用，因为属于自定义事件，需要加<code>native</code>修饰符，把自定义事件改为原生DOM事件）</p><ol><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>Event1 @click<span class="token punctuation">.</span>native<span class="token operator">=</span><span class="token string">&quot;handler1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Event1<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>当前原生DOM的click事件，其实是给Event1的根节点绑定了点击事件。（也利用到了事件的委托，因为不管点击哪个子元素都会触发事件）</li></ol></li></ol></li></ol><h2 id="_2-v-model深入-组件通信方式的一种" tabindex="-1"><a class="header-anchor" href="#_2-v-model深入-组件通信方式的一种" aria-hidden="true">#</a> 2.v-model深入（组件通信方式的一种）</h2><blockquote><p>v-model它是Vue框架中指令，它主要结合表单元素一起使用。（文本框、复选、单选等等）它主要的作用是收集表单数据</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 
oninput事件，它经常结合表单元素一起使用，当表单元素文本内容发生变化的时候就会触发一次回调 
vue2:可以通过value与input事件实现v-model功能
--&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg = $event.target.value<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>v-model:实现父子组件数据同步（实现父子组件通信)</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token comment">&lt;!-- 
父组件
:value是什么？这是props，父子组件通信
这里的input是自定义事件，作用是给msg赋值（子组件传递过来的值） 得到v-model的效果，实现父子组件数据同步
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CustomInput</span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg = $event<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CustomInput</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>
<span class="token comment">&lt;!-- 
子组件
input系统事件调用绑定的input自定义事件传递当前的事件对象属性值 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(&#39;input&#39;, $event.target.value)<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>v-model实现原理：是通过value与input事件实现的，而且还可以通过v-model实现父子组件数据的同步</p></blockquote><p>##3.sync修饰符</p><p>首先不使用.sync修饰符使用父子组件书局同步</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code> <span class="token comment">&lt;!-- 
  父组件
  :money是父组件给子组件传递的props 
  @update:money 给子组件绑定的自定义事件，名字叫@update:money
  目前现在这种操作，其实和v-model很相似，可以实现父子组件数据同步
 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">:money</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">@update:</span>money</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money = $event<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Child</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 子组件Child.vue  --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>小明每次花100元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(&#39;update:money&#39;, money - 100)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>花钱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        爸爸还剩{{ money }}元
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
   	 <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Child2&quot;</span><span class="token punctuation">,</span>
       <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>使用.sync修饰符使用父子组件书局同步</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 父组件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child2</span> <span class="token attr-name">:money.sync</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Child2</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>:money.sync <ol><li>父组件给子组件传递props <code>money</code></li><li>给当前子组件绑定了一个自定义事件，而且事件名称是<code>update:money</code></li></ol></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>小明每次花100元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$emit(&#39;update:money&#39;, money - 100)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>花钱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
        爸爸还剩 {{ money }} 元
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/ecmascript-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Child2&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用<code>.sync</code>后写法需要注意的是：自定义事件名字只能采用<code>update:传递过来的prop属性</code>的方式才行。</p></blockquote><h2 id="_4-attrs与-listeners" tabindex="-1"><a class="header-anchor" href="#_4-attrs与-listeners" aria-hidden="true">#</a> 4.＄attrs与＄listeners</h2><ul><li>$attrs： <ul><li>属于组件的一个属性，可以获取到父组件传递过来的props数据。</li><li>对于子组件而言，父组件给的数据可以利用props接收，但是需要注意，如果子组件通过props接收的属性，那么在$attrs属性当中是获取不到的。 (<code>class</code> 和 <code>style</code> 除外)</li></ul></li></ul><p>例子：重新将ElementUI按钮（el-button）封装</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>父组件
<span class="token comment">&lt;!-- 当用户在使用封装的按钮时候，向HintButton组件传递相应数据（进行二次封装） --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HintButton</span>
      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-icon-delete<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>删除<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HintButton</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>子组件
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 可以巧妙地利用a标签实现按钮带有提示功能 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$listeners<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
           <span class="token comment">&lt;!--  &lt;el-button   v-on:click=&quot;$listeners.todo&quot;&gt;&lt;/el-button&gt; --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>$listeners <ul><li>它也是组件实例自身的一个属性，它可以获取到父组件给子组件传递的事件（原生事件和自定义事件）。（不含 <code>.native</code> 修饰器的<code>v-on</code> 事件监听器）。</li></ul></li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>        父组件
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HintButton</span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>success<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el-icon-delete<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>删除<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handler<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HintButton</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!-- 所有事件监听器都绑定到了该按钮上 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>
                <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$listeners<span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
               <span class="token comment">&lt;!-- 指定事件监听器绑定到了该按钮上 --&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span>
                   <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$listeners.click<span class="token punctuation">&quot;</span></span>    <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ click: $listeners.click}<span class="token punctuation">&quot;</span></span>
            <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关文章 https://juejin.cn/post/7008811358380621854</p><p>使用$listeners结合自定义事件实现传参</p><h2 id="_5-children和-parent" tabindex="-1"><a class="header-anchor" href="#_5-children和-parent" aria-hidden="true">#</a> 5.＄children和＄parent</h2><ul><li>ref可以获取到某一个组件。</li><li>$children： <ul><li>是组件实例的属性，可以获取到当前组件的全部子组件（以数组的形式返回）</li></ul></li><li>$parent： <ul><li>可以通过$parent属性获取到某一个父组件，可以操作父组件的数据与方法</li></ul></li></ul><h2 id="_6-混入mixin" tabindex="-1"><a class="header-anchor" href="#_6-混入mixin" aria-hidden="true">#</a> 6.混入mixin</h2><p>如果项目当中出现了很多结构类似的功能，想到组件复用。</p><p>如果项目当中很多的组件JS业务逻辑相似，想到mixin。（可以把多个组件JS部分重复、相似地方）</p><h2 id="_7-插槽" tabindex="-1"><a class="header-anchor" href="#_7-插槽" aria-hidden="true">#</a> 7.插槽</h2><p>插槽：可以实现父子组件通信（通信的是结构）</p><ol><li>默认插槽</li><li>具名插槽</li><li>作用域插槽：子组件的数据来源于父组件，子组件是决定不了自身结构与外观。</li></ol>`,40),l=[e];function o(c,u){return a(),s("div",null,l)}const k=n(p,[["render",o],["__file","vue2zujiantongxin.html.vue"]]);export{k as default};
